/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution { 
    Queue<TreeNode> q=new LinkedList<>();
    // List<ArrayList> lis=new ArrayList<ArrayList>();
    // List<List<Integer>> listOfLists = new ArrayList<>(); 

    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> listOfLists = new ArrayList<>(); 
        if(root==null){
            return listOfLists;
        } 
        q.add(root);
        while(!q.isEmpty()){
            int size=q.size(); 
            List<Integer> curlevel=new ArrayList<>(); 
            while(size-->0){
                TreeNode currentnode=q.remove(); 
                curlevel.add(currentnode.val); 
                if(currentnode.left!=null) q.add(currentnode.left); 
                if(currentnode.right!=null) q.add(currentnode.right);
            } 
            listOfLists.add(curlevel);
        }   
        return listOfLists;
    }


}
